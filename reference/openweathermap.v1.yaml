openapi: 3.0.0
info:
  title: OpenWeatherMap API
  version: '2.5'
  description: "현재 날씨, 16일간의 예보, 특정 도시의 5일간 3시간 간격 예보 정보를 가져옵니다. 도움이 될 수 있는 상태 정보와 그래픽, 이전 이력을 레퍼런스에서 확인할 수 있습니다. 인터랙티브한 지도를 통해 강수량, 구름, 기압, 바람을 확인할 수 있습니다. 데이터는 JSON, XML, HTML 형식으로 사용할 수 있습니다. **참고**: 샘플로 제공되는 Swagger 파일은 OpenWeatherMap API에서 제공하는 '현재' 엔드포인트만 처리합니다.<br/><br/> **참고**: 모든 파라미터는 옵션이지만 최소 한 개 이상의 파라미터를 선택해야 합니다. 도시 아이디('id' 파라미터를 사용합니다)에 따른 API를 호출하는 것이 가장 정확한 지역 정보를 반환합니다."
  contact:
    name: Support
    url: 'https://openweathermap.org/api'
    email: some_email@gmail.com
  termsOfService: 'https://openweathermap.org/terms'
  license:
    name: 저작자표시-동일조건변경허락 4.0 국제 (CC BY-SA 4.0)
    url: 'https://openweathermap.org/price'
servers:
  - url: 'https://api.openweathermap.org/data/2.5'
    description: prod
paths:
  /weather:
    get:
      summary: weather
      tags:
        - Weather endpoints
      responses: {}
      operationId: get-weather
      description: 약 20만개의 도시의 현재 날씨 데이터에 접근합니다. 현재 날씨는 4만여개의 관측소로부터 수집된 데이터를 기반으로 업데이트됩니다.
      security:
        - app_id: []
      parameters:
        - schema:
            type: string
          in: query
          name: ' zip'
          description: '**우편번호**. 우편번호로 검색합니다. *예: 95050,us*. 국가 정보를 지정하지 않으면 USA를 기본값으로 처리합니다.'
        - schema:
            type: string
            enum:
              - standard
              - metric
              - imperial
            default: standard
          in: query
          name: units
          description: '**단위**. *예: imperial*. 입력할 수 있는 값: `standard`, `metric`, `imperial`. `units` 파라미터를 사용하지 않으면 `standard`를 기본값으로 처리합니다.'
        - schema:
            type: string
          in: query
          name: q
          description: '**도시명**. *예: London*. 도시명 또는 도시명과 국가코드를 같이 사용할 수 있습니다. 해당 문자에 해당하는 검색 결과 목록을 API에서는 응답해줍니다. 쿼리값으로 도시이름을 입력하고 ISO 3166에 정의된 국가 코드를 콤마로 구분해서 입력할 수 있습니다.'
        - schema:
            type: string
          in: query
          name: id
          description: '**도시 ID**. "예: `2172797`*. 도시 ID를 지정해 호출할 수 있습니다. API에서는 해당 도시의 정확한 결과를 반환합니다. 도시 ID 목록은 다음 링크에서 확인할 수 있습니다. [도시 목록](http://bulk.openweathermap.org/sample/). 파라미터 내에서 여러 도시를 콤마로 구분해서 포함할 수 있습니다. 지정할 수 있는 위치는 20개로 제한됩니다. *참고: 하나의 ID는 하나의 API 호출로 처리됩니다. 그래서 여러 개의 도시 ID를 지정하면 3번의 API 호출로 처리될 수 있습니다.'
        - schema:
            type: string
          in: query
          name: lat
          description: '**위도**. *예: 35*. 요청하는 지역의 위도 좌표. `lon` 파라미터와 같이을 사용해야 합니다'
        - schema:
            type: string
          in: query
          name: lon
          description: '**경도**. *예: 139*. 요청하는 지역의 경도 좌표. `lat ` 파라미터와 같이 사용해야 합니다.'
        - schema:
            type: string
            default: en
          in: query
          name: lang
          description: '**언어**. *예: en*. 원하는 언어로 결과값을 받기 위해 lang 파라미터를 사용할 수 있습니다. 다음과 같은 언어를 지원합니다. Arabic - `ar`, Bulgarian - `bg`, Catalan - `ca`, Czech - `cz`, German - `de`, Greek - `el`, English - `en`, Persian (Farsi) - `fa`, Finnish - `fi`, French - `fr`, Galician - `gl`, Croatian - `hr`, Hungarian - `hu`, Italian - `it`, Japanese - `ja`, Korean - `kr`, Latvian - `la`, Lithuanian - `lt`, Macedonian - `mk`, Dutch - `nl`, Polish - `pl`, Portuguese - `pt`, Romanian - `ro`, Russian - `ru`, Swedish - `se`, Slovak - `sk`, Slovenian - `sl`, Spanish - `es`, Turkish - `tr`, Ukrainian - `ua`, Vietnamese - `vi`, Chinese Simplified - `zh_cn`, Chinese Traditional - `zh_tw`.'
        - schema:
            type: string
            enum:
              - json
              - xml
              - html
            default: json
          in: query
          name: mode
          description: '**Mode**. *예: html*. 응답의 형식을 지정합니다. `json`, `xml`, `html`을 사용할 수 있습니다. mode 파라미터가 빈 값이라면 `json`을 기본값으로 사용합니다.'
components:
  schemas: {}
  securitySchemes:
    app_id:
      name: appid
      type: apiKey
      in: query
